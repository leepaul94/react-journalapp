{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebaseConfig.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppbar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","orderBy","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","NotesAppbar","useDispatch","useSelector","noteDate","moment","date","className","format","style","display","onChange","e","files","text","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","console","log","message","logout","JournalEntry","backgroundSize","backgroundImage","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"kMAEaA,EAEF,eAFEA,EAGD,gBAHCA,EAKG,iBALHA,EAMM,oBANNA,EAQO,qBARPA,EASQ,sBATRA,EAWI,mBAXJA,EAYI,0BAZJA,EAaE,qBAbFA,EAcI,uBAdJA,EAgBI,sBAhBJA,EAiBY,0B,eCFnBC,EAAe,CACjBC,MAAO,GACPC,OAAQ,MCjBNF,EAAe,CACjBG,SAAS,EACTC,SAAU,MCGRC,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAErGC,EAAWC,YAAgB,CAC7BC,KCDuB,WAA2B,IAAzBC,EAAwB,uDAAhB,GAAIC,EAAY,uCAEjD,OAAQA,EAAOC,MACX,KAAKf,EACD,MAAO,CACHgB,IAAKF,EAAOG,QAAQD,IACpBE,KAAMJ,EAAOG,QAAQE,aAG7B,KAAKnB,EACD,MAAO,GAEX,QACI,OAAOa,IDXfO,GDHqB,WAAoC,IAAlCP,EAAiC,uDAAzBZ,EAAca,EAAW,uCAExD,OAASA,EAAOC,MAEZ,KAAKf,EACD,OAAO,2BACAa,GADP,IAEIR,SAAUS,EAAOG,UAEzB,KAAKjB,EACD,OAAO,2BACAa,GADP,IAEIR,SAAU,OAElB,KAAKL,EACD,OAAO,2BACAa,GADP,IAEIT,SAAS,IAEjB,KAAKJ,EACD,OAAO,2BACAa,GADP,IAEIT,SAAS,IAGjB,QACI,OAAOS,ICtBfX,MFUwB,WAAqC,IAAnCW,EAAkC,uDAA1BZ,EAAca,EAAY,uCAE5D,OAAQA,EAAOC,MAEX,KAAKf,EACD,OAAO,2BACAa,GADP,IAEIV,OAAO,eACAW,EAAOG,WAItB,KAAKjB,EACD,OAAO,2BACAa,GADP,IAEIX,MAAM,CAAGY,EAAOG,SAAX,mBAAuBJ,EAAMX,UAG1C,KAAKF,EACD,OAAO,2BACAa,GADP,IAEIX,MAAM,YAAMY,EAAOG,WAG3B,KAAKjB,EACD,OAAO,2BACAa,GADP,IAEIX,MAAOW,EAAMX,MAAMmB,KACf,SAAAC,GAAI,OAAIA,EAAKC,KAAOT,EAAOG,QAAQM,GAC7BT,EAAOG,QAAQK,KACfA,OAIlB,KAAKtB,EACD,OAAO,2BACAa,GADP,IAEIV,OAAQ,KACRD,MAAOW,EAAMX,MAAMsB,QACf,SAAAF,GAAI,OAAIA,EAAKC,KAAOT,EAAOG,aAIvC,KAAKjB,EACD,OAAO,2BACAa,GADP,IAEIV,OAAQ,KACRD,MAAO,KAGf,QACI,OAAOW,MEzDNY,EAAQC,YACjBhB,EACAJ,EACIqB,YAAiBC,O,qEELzBC,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,yCACZC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,8CAQX,IAAMC,EAAKR,IAASS,YAEdC,EAAqB,IAAIV,IAASjB,KAAK4B,mB,iBClBhCC,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DAEL,kDAEXC,EAAW,IAAIC,UACZC,OAAO,gBAAiB,iBACjCF,EAASE,OAAO,OAAQJ,GANF,kBAUCK,MARN,iDAQuB,CAChCC,OAAQ,OACRC,KAAML,IAZQ,YAUZM,EAVY,QAeTC,GAfS,kCAgBUD,EAAKE,OAhBf,eAgBRC,EAhBQ,yBAiBPA,EAAUC,YAjBH,yBAmBFJ,EAAKE,OAnBH,oJAAH,sDCEVG,EAAS,uCAAG,WAAOvC,GAAP,iBAAA2B,EAAA,sEAEGN,EAAGmB,WAAH,UAAkBxC,EAAlB,mBACHyC,QAAQ,OAAQ,QAChBC,MAJA,cAEfC,EAFe,OAMfzD,EAAQ,GAEdyD,EAAUC,SAAS,SAAAC,GACf3D,EAAM4D,KAAN,aACIvC,GAAIsC,EAAStC,IACVsC,EAASE,YAXC,kBAgBd7D,GAhBc,2CAAH,sDCwBT8D,EAAa,SAAEzC,EAAID,GAAN,MAAiB,CACvCP,KAAMf,EACNiB,QAAQ,aACJM,MACGD,KAIE2C,EAAa,SAAE1C,EAAID,GAAN,MAAiB,CAEvCP,KAAMf,EACNiB,QAAQ,aACJM,MACGD,KAIE4C,EAAoB,SAAElD,GAC/B,8CAAO,WAAOmD,GAAP,eAAAxB,EAAA,sEAEiBY,EAAWvC,GAF5B,OAEGd,EAFH,OAIHiE,EAAUC,EAASlE,IAJhB,2CAAP,uDASSkE,EAAW,SAAElE,GAAF,MAAc,CAClCa,KAAMf,EACNiB,QAASf,IAGAmE,EAAgB,SAAE/C,GAC3B,8CAAO,WAAO6C,EAAUG,GAAjB,iBAAA3B,EAAA,6DAEK3B,EAAQsD,IAAW1D,KAAnBI,IAEHM,EAAKiD,YACCjD,EAAKiD,WAGVC,EARH,eAQ0BlD,IACNC,GATpB,SAWGc,EAAGoC,IAAH,UAAWzD,EAAX,0BAAkCM,EAAKC,KAAOmD,OAAQF,GAXzD,OAaHL,EAAUQ,EAAarD,EAAKC,GAAIiD,IAChCI,IAAKC,KAAK,QAASvD,EAAKwD,MAAO,WAd5B,2CAAP,yDAkBSH,EAAc,SAAEpD,EAAID,GAAN,MAAiB,CACxCP,KAAMf,EACNiB,QAAS,CACLM,KACAD,KAAK,aACDC,MACGD,MAwCFyD,EAAa,SAAExD,GAAF,MAAW,CACjCR,KAAMf,EACNiB,QAASM,I,QC7HAyD,EAAU,WAA0B,IAAxB/E,EAAuB,uDAAR,GAEpC,EAA4BgF,mBAAShF,GAArC,mBAAOiF,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WAAoC,IAAlCC,EAAiC,uDAAlBpF,EAC3BkF,EAAWE,IAGTC,EAAoB,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OAE1BJ,EAAU,2BAEHD,GAFE,kBAGJK,EAAOrE,KAAOqE,EAAOC,UAM9B,MAAO,CAAEN,EAAQI,EAAmBF,I,wBCf3BK,EAAc,WAEvB,IAAMtB,EAAWuB,cACTvF,EAAWwF,aAAY,SAAA9E,GAAK,OAAIA,EAAMX,SAAtCC,OAEFyF,EAAWC,IAAO1F,EAAO2F,MAiB/B,OACI,sBAAKC,UAAU,gBAAf,UACI,+BAAQH,EAASI,OAAO,0BAExB,uBACIzE,GAAG,eACHR,KAAK,OACLG,KAAK,OACL+E,MAAO,CAAEC,QAAS,QAClBC,SAhBa,SAACC,GACtB,IAAM1D,EAAO0D,EAAEb,OAAOc,MAAM,GACxB3D,GACAyB,EFkEkB,SAAEzB,GAC5B,8CAAO,WAAOyB,EAAUG,GAAjB,iBAAA3B,EAAA,6DAEYqB,EAAeM,IAAWpE,MAAjCC,OAERyE,IAAKC,KAAK,CACNC,MAAO,eACPwB,KAAM,iBACNC,mBAAmB,EACnBC,SAAU,WACN5B,IAAK6B,iBATV,SAamBhE,EAAYC,GAb/B,OAaGgE,EAbH,OAcH1C,EAAWO,IAAMmC,EAEjBvC,EAAUE,EAAeL,IAEzBY,IAAK+B,QAlBF,2CAAP,wDEnEkBC,CAAgBlE,OAgB1B,gCACI,wBACIqD,UAAU,MACVc,QA1BY,WACxBC,SAASC,cAAc,iBAAiBC,SAuBhC,qBAMA,wBACIjB,UAAU,MACVc,QApCG,WACf1C,EAAUE,EAAelE,KAiCjB,yBCzCH8G,GAAa,WAEtB,IAAM9C,EAAWuB,cAEFpE,EAASqE,aAAa,SAAA9E,GAAK,OAAIA,EAAMX,SAA5CC,OACR,EAAiD6E,EAAS1D,GAA1D,mBAAQ4F,EAAR,KAAoB5B,EAApB,KAAuCF,EAAvC,KACQN,EAAoBoC,EAApBpC,MAAO7B,EAAaiE,EAAbjE,KAAM1B,EAAO2F,EAAP3F,GAIf4F,EAAWC,iBAAQ9F,EAAKC,IAE9B8F,qBAAU,WAEF/F,EAAKC,KAAO4F,EAASG,UACrBlC,EAAO9D,GACP6F,EAASG,QAAUhG,EAAKC,MAG7B,CAAED,EAAM8D,IAEXiC,qBAAU,WAENlD,EAAUH,EAAYkD,EAAW3F,GAAb,eAAsB2F,OAE3C,CAAEA,EAAY/C,IAKjB,OACI,sBAAK4B,UAAU,sBAAf,UAEI,cAAC,EAAD,IAEA,sBAAKA,UAAU,iBAAf,UAEI,uBACIhF,KAAK,OACLwG,YAAY,qBACZxB,UAAU,qBACVyB,aAAa,MACbtG,KAAK,QACLsE,MAAQV,EACRqB,SAAWb,IAGf,0BACIiC,YAAY,sBACZxB,UAAU,kBACV7E,KAAK,OACLsE,MAAQvC,EACRkD,SAAWb,IAIVhE,EAAKiD,KAEF,qBAAKwB,UAAU,eAAf,SACI,qBACI0B,IAAMnG,EAAKiD,IACXmD,IAAI,gBASxB,wBACI3B,UAAU,iBACVc,QA7CS,WACjB1C,EH+EqB,SAAE5C,GAC3B,8CAAO,WAAO4C,EAAUG,GAAjB,eAAA3B,EAAA,6DAEG3B,EAAMsD,IAAW1D,KAAKI,IAFzB,SAGGqB,EAAGoC,IAAH,UAAWzD,EAAX,0BAAkCO,IAAOoG,SAH5C,OAKHxD,EAAUY,EAAYxD,IALnB,2CAAP,wDGhFcqG,CAAerG,KA0CrB,wBC1ECsG,GAAkB,WAC3B,OACI,sBAAK9B,UAAU,wBAAf,UACI,iDAEI,uBAFJ,wBAMA,mBAAGA,UAAU,+BCTZ+B,GAAW,SAAEC,GAAF,MAAY,CAChChH,KAAMf,EACNiB,QAAS8G,IAWAC,GAAgB,iBAAO,CAChCjH,KAAMf,ICTGiI,GAA0B,SAACC,EAAOC,GAC3C,OAAO,SAAChE,GAEJA,EDC2B,CAC/BpD,KAAMf,ICAF6B,IAASjB,OAAOwH,2BAA4BF,EAAOC,GAC9CE,MAAM,YAAe,IAAZC,EAAW,EAAXA,KAENnE,EACIoE,GAAOD,EAAKtH,IAAKsH,EAAKnH,cAG1BgD,EAAU6D,SAGbQ,OAAO,SAAApC,GACJqC,QAAQC,IAAItC,GACZjC,EAAU6D,MACVpD,IAAKC,KAAK,QAASuB,EAAEuC,QAAS,cAqCjCJ,GAAQ,SAACvH,EAAKG,GAAN,MAAuB,CACpCJ,KAAMf,EACNiB,QAAS,CACLD,MACAG,iBAeCyH,GAAS,iBAAO,CACzB7H,KAAMf,IC7EG6I,GAAe,SAAC,GAAoC,IAAlCtH,EAAiC,EAAjCA,GAAIuE,EAA6B,EAA7BA,KAAMhB,EAAuB,EAAvBA,MAAO7B,EAAgB,EAAhBA,KAAMsB,EAAU,EAAVA,IAE5CJ,EAAWuB,cAEXE,EAAWC,IAAOC,GAaxB,OACI,sBACIC,UAAU,2EACVc,QAdiB,WACrB1C,EACIH,EAAWzC,EAAI,CACXuD,QACA7B,OACAsB,MACAuB,WAMR,UAKQvB,GACA,qBACIwB,UAAU,yBACVE,MAAO,CACH6C,eAAgB,QAChBC,gBAAgB,OAAD,OAAUxE,EAAV,QAK3B,sBAAKwB,UAAU,sBAAf,UACI,mBAAGA,UAAU,uBAAb,SACMjB,IAEN,mBAAGiB,UAAU,yBAAb,SACM9C,OAIV,sBAAK8C,UAAU,0BAAf,UACI,qCAASH,EAASI,OAAO,QAAzB,OACA,mCAAOJ,EAASI,OAAO,MAAvB,cC7CHgD,GAAiB,WAE1B,IAAQ9I,EAAUyF,aAAY,SAAA9E,GAAK,OAAIA,EAAMX,SAArCA,MAER,OACI,qBAAK6F,UAAU,mBAAf,SAGQ7F,EAAMmB,KAAK,SAAAC,GAAI,OACX,cAAC,GAAD,eAESA,GADCA,EAAKC,UCRtB0H,GAAU,WAEnB,IAAM9E,EAAWuB,cAETxE,EAASyE,aAAY,SAAA9E,GAAK,OAAIA,EAAMD,QAApCM,KAUR,OACI,wBAAO6E,UAAU,mBAAjB,UAEI,sBAAKA,UAAU,0BAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,gBACb,qCAAS7E,QAGb,wBACI6E,UAAU,MACVc,QAnBK,WACjB1C,EH0DJ,uCAAO,WAAOA,GAAP,SAAAxB,EAAA,sEACGd,IAASjB,OAAOsI,UADnB,OAGH/E,EAAUyE,MAEVzE,ENsDyB,CAC7BpD,KAAMf,IM5DC,2CAAP,wDG1CY,uBASJ,sBACI+F,UAAU,qBACVc,QAxBS,WACjB1C,ETPJ,uCAAO,WAAOA,EAAUG,GAAjB,mBAAA3B,EAAA,6DAEK3B,EAAQsD,IAAW1D,KAAnBI,IACRyH,QAAQC,IAAK1H,GACPmI,EAAU,CACZrE,MAAO,GACP7B,KAAM,GACN6C,MAAM,IAAIsD,MAAOC,WAPlB,SAWehH,EAAGmB,WAAH,UAAiBxC,EAAjB,mBAAsCsI,IAAKH,GAX1D,OAWG1E,EAXH,OAaHN,EAAUH,EAAYS,EAAIlD,GAAI4H,IAC9BhF,EAAUF,EAAYQ,EAAIlD,GAAI4H,IAd3B,2CAAP,0DS4BQ,UAII,mBAAGpD,UAAU,+BACb,mBAAGA,UAAU,OAAb,0BAKJ,cAAC,GAAD,QC1CCwD,GAAgB,WAEzB,IAAQpJ,EAAWwF,aAAY,SAAA9E,GAAK,OAAIA,EAAMX,SAAtCC,OAER,OACI,sBAAK4F,UAAU,0EAAf,UAEI,cAAC,GAAD,IAEA,+BAGU5F,EACK,cAAC,GAAD,IACA,cAAC,GAAD,UCddqJ,GAAc,WAEvB,IAAMrF,EAAWuB,cAETtF,EAAYuF,aAAY,SAAA9E,GAAK,OAAIA,EAAMO,MAAvChB,QAER,EAA0C4E,EAAQ,CAC9CkD,MAAO,iBACPC,SAAU,WAFd,mBAAQjB,EAAR,KAAoB5B,EAApB,KAKQ4C,EAAoBhB,EAApBgB,MAAOC,EAAajB,EAAbiB,SAYf,OACI,qCACI,oBAAIpC,UAAU,cAAd,mBAEA,uBACI0D,SAdQ,SAACrD,GACjBA,EAAEsD,iBACFvF,EAAU8D,GAAyBC,EAAOC,KAalCpC,UAAU,oDAFd,UAII,uBACIhF,KAAK,OACLwG,YAAY,QACZrG,KAAK,QACL6E,UAAU,cACVP,MAAQ0C,EACR/B,SAAWb,IAGf,uBACIvE,KAAK,WACLwG,YAAY,WACZrG,KAAK,WACL6E,UAAU,cACVP,MAAQ2C,EACRhC,SAAWb,IAGf,wBACIvE,KAAK,SACLgF,UAAU,4BACV4D,SAAWvJ,EAHf,mBAQA,sBAAK2F,UAAU,wBAAf,UACI,2DACA,sBACIA,UAAU,aACVc,QA1CM,WACtB1C,GLwBG,SAAEA,GAELtC,IAASjB,OAAOgJ,gBAAiBrH,GAC5B8F,MAAM,YAAe,IAAZC,EAAW,EAAXA,KACNnE,EACIoE,GAAOD,EAAKtH,IAAKsH,EAAKnH,qBKUtB,UAII,qBAAK4E,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAc0B,IAAI,8EAA8EC,IAAI,oBAEvH,mBAAG3B,UAAU,WAAb,SACI,4DAKZ,cAAC,IAAD,CACI8D,GAAG,iBACH9D,UAAU,OAFd,uC,oBCtEH+D,GAAiB,WAE1B,IAAM3F,EAAWuB,cAETrF,EAAasF,aAAY,SAAA9E,GAAK,OAAIA,EAAMO,MAAxCf,SAER,EAA0C2E,EAAQ,CAC9C9D,KAAM,OACNgH,MAAO,iBACPC,SAAU,SACV4B,UAAW,WAJf,mBAAQ7C,EAAR,KAAoB5B,EAApB,KAOQpE,EAAqCgG,EAArChG,KAAMgH,EAA+BhB,EAA/BgB,MAAOC,EAAwBjB,EAAxBiB,SAAU4B,EAAc7C,EAAd6C,UAUzBC,EAAc,WAEhB,OAA2B,IAAvB9I,EAAK+I,OAAOC,QACZ/F,EAAU2D,GAAS,sBACZ,GACEqC,KAAUC,QAASlC,GAGpBC,IAAa4B,GAAa5B,EAAS+B,OAAS,GACpD/F,EAAU2D,GAAS,gFACZ,IAGX3D,EPrC0B,CAC9BpD,KAAMf,KOqCK,IARHmE,EAAU2D,GAAS,wBACZ,IAUf,OACI,qCACI,oBAAI/B,UAAU,cAAd,sBAEA,uBACI0D,SA9BW,SAACrD,GACpBA,EAAEsD,iBAEEM,KACA7F,ENGsC,SAAE+D,EAAOC,EAAUjH,GACjE,OAAO,SAACiD,GAEJtC,IAASjB,OAAOyJ,+BAAgCnC,EAAOC,GAClDE,KADL,uCACW,6BAAA1F,EAAA,6DAAQ2F,EAAR,EAAQA,KAAR,SAEGA,EAAKgC,cAAc,CAAEnJ,YAAaD,IAFrC,OAIHiD,EACIoE,GAAOD,EAAKtH,IAAKsH,EAAKnH,cALvB,2CADX,uDASKqH,OAAO,SAAApC,GACJqC,QAAQC,IAAItC,GACZxB,IAAKC,KAAK,QAASuB,EAAEuC,QAAS,aMjBxB4B,CAAoCrC,EAAOC,EAAUjH,KA2B3D6E,UAAU,oDAFd,UAMQ1F,GAEI,qBAAK0F,UAAU,oBAAf,SACM1F,IAKd,uBACIU,KAAK,OACLwG,YAAY,OACZrG,KAAK,OACL6E,UAAU,cACVyB,aAAa,MACbhC,MAAQtE,EACRiF,SAAWb,IAGf,uBACIvE,KAAK,OACLwG,YAAY,QACZrG,KAAK,QACL6E,UAAU,cACVyB,aAAa,MACbhC,MAAQ0C,EACR/B,SAAWb,IAGf,uBACIvE,KAAK,WACLwG,YAAY,WACZrG,KAAK,WACL6E,UAAU,cACVP,MAAQ2C,EACRhC,SAAWb,IAGf,uBACIvE,KAAK,WACLwG,YAAY,mBACZrG,KAAK,YACL6E,UAAU,cACVP,MAAQuE,EACR5D,SAAWb,IAGf,wBACIvE,KAAK,SACLgF,UAAU,iCAFd,sBAQA,cAAC,IAAD,CACI8D,GAAG,cACH9D,UAAU,OAFd,wCC1GHyE,GAAa,WACtB,OACI,qBAAKzE,UAAU,aAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACI0E,OAAK,EACLC,KAAK,cACLC,UAAYnB,KAGhB,cAAC,IAAD,CACIiB,OAAK,EACLC,KAAK,iBACLC,UAAYb,KAGhB,cAAC,IAAD,CAAUD,GAAG,gBAbjB,Y,4CCNHe,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,mBAEF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACIJ,UAAY,SAACK,GAAD,OACNH,EACM,cAACC,EAAD,eAAeE,IACf,cAAC,IAAD,CAAUnB,GAAG,qB,mCCXxBoB,GAAc,SAAC,GAIrB,IAHHJ,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,mBACF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACAJ,UAAY,SAACK,GAAD,OACLH,EAEK,cAAC,IAAD,CAAUhB,GAAG,MADb,cAACiB,EAAD,eAAeE,SCMtBE,GAAY,WAErB,IAAM/G,EAAWuB,cAEjB,EAAgCT,oBAAS,GAAzC,mBAAOkG,EAAP,KAAiBC,EAAjB,KAEA,EAAoCnG,oBAAS,GAA7C,mBAAOoG,EAAP,KAAmBC,EAAnB,KAsBA,OAnBAjE,qBAAU,WAENxF,IAASjB,OAAO2K,mBAAhB,uCAAoC,WAAMjD,GAAN,SAAA3F,EAAA,uDAEhC,OAAI2F,QAAJ,IAAIA,OAAJ,EAAIA,EAAMtH,MACNmD,EAAUoE,GAAOD,EAAKtH,IAAKsH,EAAKnH,cAChCmK,GAAc,GAEdnH,EAAUD,EAAmBoE,EAAKtH,OAElCsK,GAAc,GAGlBF,GAAY,GAXoB,2CAApC,yDAeD,CAACjH,EAAUiH,EAAaE,IAEvBH,EAEI,iDAKJ,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,GAAD,CACIT,KAAK,QACLC,UAAYH,GACZK,gBAAkBQ,IAGtB,cAAC,GAAD,CACIZ,OAAK,EACLC,KAAK,IACLC,UAAYpB,GACZsB,gBAAkBQ,IAGtB,cAAC,IAAD,CAAUxB,GAAG,wBChEpB2B,GAAa,WACtB,OACI,cAAC,IAAD,CAAU/J,MAAQA,EAAlB,SACI,cAAC,GAAD,O,OCJZgK,IAASC,OACP,cAAC,GAAD,IACA5E,SAAS6E,eAAe,W","file":"static/js/main.db0b4176.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdate: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\r\n    \r\n}","/*\r\n    {\r\n        notes: [],\r\n        active: null,\r\n        active: {\r\n            id: 'FSDFA4523FDSDFSDSA234A' PROVISTO POR EL FIREBASE\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 154235425235\r\n        }\r\n    }\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n};\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n  \r\n    switch (action.type) {\r\n        \r\n        case types.notesActive: \r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        \r\n        case types.notesAddNew: \r\n            return {\r\n                ...state, \r\n                notes: [ action.payload, ...state.notes ] // lo agrego al principio y luego le copio las que ya estaban\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map( \r\n                    note => note.id === action.payload.id \r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            };\r\n\r\n        case types.notesDelete: \r\n            return {\r\n                ...state, \r\n                active: null,\r\n                notes: state.notes.filter(\r\n                    note => note.id !== action.payload\r\n                )\r\n            }\r\n        \r\n        case types.notesLogoutCleaning: \r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n// Esta es la configuracion para poder trabajar con tareas asincronas y sincronas\r\n// composeEnhancers nos habilita que tengamos las extension del devtools de redux y a su vez, aplicar middlewares\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose; \r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n/* Objeto que se recibiria\r\n    {\r\n        uid: 'sdakjhsbduajhysbi4352345234',\r\n        name: 'Paul'\r\n    }\r\n*/\r\n\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBfVSo2nNRzZQHkQz32bmhEYF-ei3TM3_Q\",\r\n    authDomain: \"react-app-cursos-a052a.firebaseapp.com\",\r\n    projectId: \"react-app-cursos-a052a\",\r\n    storageBucket: \"react-app-cursos-a052a.appspot.com\",\r\n    messagingSenderId: \"717544781535\",\r\n    appId: \"1:717544781535:web:7e0e8b2efce889395f5b6a\"\r\n};\r\n\r\n// esta es la base de datos\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// para guarda info y el google auth provider\r\n// esta es la referencia a firestore\r\nconst db = firebase.firestore();\r\n// esta es mi auth provider\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\n\r\nexport const fileUpload = async( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/leepaul/upload'; // lo que voy a llamar en el fetch\r\n\r\n    const formData = new FormData(); // formato del postman\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try { // por si algo sale mal\r\n        \r\n        const resp = await fetch( cloudUrl, { // vamos a obtener todo lo que responda cloudinary\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if( resp.ok ) { // si la respuesta se hace correctamente\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json(); // si no se muestra el error en consola. seria un error de cloudinary\r\n        }\r\n    } catch (error) {\r\n        throw error; // Si no se cumple directamente me muestre el error. un error mio del codigo ej que este mal el url\r\n    }\r\n}","import { db } from \"../firebase/firebaseConfig\"\r\n\r\n\r\n\r\nexport const loadNotes = async( uid ) => {\r\n\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`)\r\n                        .orderBy('date', 'desc')\r\n                        .get(); // referencia a las notes. get() es un promesa que me resuelve la coleccion\r\n\r\n    const notes = []; // lo que voy a retornar\r\n\r\n    notesSnap.forEach( snapHijo => { // con la data del snapHijo y el for each para cada array de notes de firebase\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n\r\n    return notes;\r\n}\r\n\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n// react-journal\r\n\r\nexport const startNewNote = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth; // asi obtengo el uid para luego grabarlo al firebase\r\n        console.log( uid );\r\n        const newNote = { // es la varible a guardar\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        // db es la referencia al database, llamo a collecion poniendo el path donde voy a guardar mi newNote con add()\r\n        // el add es algo que regresa una promesa que resuelve el document reference\r\n        const doc = await db.collection(`${uid}/journal/notes`).add( newNote )\r\n        \r\n        dispatch( activeNote( doc.id, newNote ) ); // lo grabo en el active\r\n        dispatch( addNewNote( doc.id, newNote ) ); // hago que aparezca en la pantalla en el recuadro a la izquierda\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid ); // esto es para obtener las notas del usuario en concreto. Es una promesa.\r\n                                                    // se hizo aca porque es donde por primera vez aparece el uid\r\n        dispatch( setNotes(notes) ); // mando las notes para que los pueda tener en el store o que queden almacenadas\r\n\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote = ( note ) => { // tengo que recibir la nota\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if( !note.url ){ // Si no esta definido el url, entonces lo elimino porque no puedo subir algo de undefined\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note }; // copio o clono el note asi elimino el id de la copia\r\n        delete noteToFirestore.id; // elimino el id del objeto porque no lo necesito subir, solo requiero el title, body, date\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore ); // update para actualizar al firestore\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore ));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id, // lo tengo que agregar porque la note que recibo es el noteToFirestore\r\n            ...note\r\n        }\r\n    }\r\n} )\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...', \r\n            text: 'Please wait...',\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl; // se lo estamos actualizando el url obtenido\r\n\r\n        dispatch( startSaveNote( activeNote ))\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async( dispatch, getState ) => { // para obtener el url que necesito borrar\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete(); // lo elimino de firestore\r\n\r\n        dispatch( deleteNote( id ) ); // ahora quiero eliminarlo de mi store\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const logoutNote = () => ({\r\n    type: types.notesLogoutCleaning,\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n    const handleInputChange = ( { target } ) => {\r\n        \r\n        setValues({\r\n\r\n            ...values,\r\n            [target.name]: target.value \r\n\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes'\r\n\r\nimport moment from 'moment';\r\n\r\nexport const NotesAppbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    const noteDate = moment(active.date);\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    }\r\n\r\n    const handlePictureUpload = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if( file ) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{ noteDate.format('MMMM Do YYYY, h:mm a') }</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureUpload }>\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppbar } from './NotesAppbar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active:note } = useSelector( state => state.notes ); // se desestructura y se renombra\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    const { title, body, id } = formValues;\r\n\r\n    // Explicacion en las notas del curso\r\n    // La idea es que solo se dispare si y solo si la nota cambio estableciendo la nueva nota activa para evitar un ciclo infinito\r\n    const activeId = useRef( note.id ); // es el id de la nota actual seleccionada\r\n\r\n    useEffect(() => {\r\n        \r\n        if( note.id !== activeId.current ) { // con esta condicion me cercioro de que si cambio el id me lo cambie\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [ note, reset ]);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, { ...formValues } ) );\r\n\r\n    }, [ formValues, dispatch ]);\r\n    \r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) ); // esta accion va a empezar la tarea asincrona de borrar\r\n    }\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppbar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) \r\n                    && (\r\n                        <div className=\"notes__image\">\r\n                            <img\r\n                                src={ note.url }\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            </div>\r\n            \r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n}); \r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n}); \r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n}); \r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n}); ","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\r\nimport { types } from \"../types/types\";\r\nimport { logoutNote } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword( email, password)\r\n            .then( ({ user }) => {\r\n\r\n                dispatch( \r\n                    login( user.uid, user.displayName)\r\n                );\r\n\r\n                dispatch( finishLoading() );// es indiferente ponerlo aca o antes del otro dispatch porque son tareas sincronas\r\n\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error') // el primer argumento es el titulo del mensaje, el segundo el mensaje y el tercero el icono de error\r\n            });\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\r\n    return (dispatch) => { // tengo acceso a dispatch por thunk de middleware \r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email, password ) // es una promesa\r\n            .then( async({ user }) => { // para usar el await\r\n\r\n                await user.updateProfile({ displayName: name }); // usamos await porque es una promesa el updateProfile, espero hasta que se termine de ejecutar\r\n                \r\n                dispatch( \r\n                    login( user.uid, user.displayName )\r\n                );\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error')\r\n            });\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider ) // esto va a retornar una promesa\r\n            .then( ({ user }) => {\r\n                dispatch( \r\n                    login( user.uid, user.displayName)\r\n                )\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() ); // dispatch del logout que va a borrar mi uid y el displayName del store \r\n                              // me retorna un objeto vacio cuando va al authreducer.\r\n        dispatch( logoutNote() );\r\n\r\n    }                         \r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});","import React from 'react';\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( \r\n            activeNote(id, {\r\n                title,\r\n                body,\r\n                url,\r\n                date\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick= { handleEntryClick }\r\n        >\r\n            {\r\n                url && // Si url no es undefined, entonces lo muestro\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${ url })`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span> { noteDate.format('dddd') } </span>\r\n                <h4> { noteDate.format('Do') } </h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        { ...note } // le estoy mandando las demas props \r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes )\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    ( active )\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }\r\n            \r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading } = useSelector(state => state.ui);\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'raul@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    //evitar la propagacion del formulario\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword( email, password ) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch ( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={ handleLogin }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with Social Networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError } = useSelector(state => state.ui );   \r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Raul',\r\n        email: 'raul@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ) );\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length === 0) {\r\n            dispatch( setError('Name is required') );\r\n            return false;\r\n        } else if ( !validator.isEmail( email ) ) {     // \"Si el email no es valido, ...\"\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n        } else if ( password !== password2 || password.length < 6 ) {\r\n            dispatch( setError('Password should have at least 6 charecters or numbers and match each other') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={ handleRegister }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    msgError && \r\n                    (\r\n                        <div className='auth__alert-error'>\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","// El encargado de tener todas las paginas quee esten relacionadas con el auth\r\nimport React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" /> {/*Si no va a ninguna de las dos primeras rutas, me manda a esta. */}\r\n                </Switch>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated, // me fijo si es true o false\r\n    component: Component, // lo renombro con mayuscula para que haya coherencia con las otras componentes porque es una componente\r\n    ...rest // el resto de las props que recibo\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component {...props} /> ) // si es true, en component={<Component y sus props} history, los demas\r\n                    : ( <Redirect to=\"/auth/login\" /> ) // caso contrario, me mando al la ruta del login de nuevo\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated, \r\n    component: Component, // lo renombro con mayuscula para que haya coherencia con las otras componentes porque es una componente\r\n    ...rest // el resto de las props que recibo\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n        component={ (props) => (\r\n            ( !isAuthenticated )\r\n                ? ( <Component {...props} /> ) // si es true, en component={<Component y sus props} history, los demas\r\n                : ( <Redirect to=\"/\" /> ) // caso contrario, me mando al la ruta del journal\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","// Sistema de rutas principal\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { firebase } from '../firebase/firebaseConfig';\r\n\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    // Solo se ejecuta una sola vez porque firebase.auth().onAuthStateChanged es un observable que va a estar pendiente de los cambios de la autenticacion de mi usuario. Solo se va a ejecutar cuando cambia la autenticacion o sea el uid que siempre es el mismo para determinado usuario y diferente de otro (usuario)\r\n    useEffect(() => {\r\n        // Firebase me va a decir algo cuando la autenticacion cambia que es una funcion que se ejecuta cada vez que el estado de autenticacion cambia. Es un firebase.auth().onAuthStateChanged. Tambien se usa use effect.\r\n        firebase.auth().onAuthStateChanged( async(user) => { // firebase.auth().onAuthStateChanged va a crear un observable que es un tipo de objeto especial que se puede disparar mas de una vez. Cuando la autenticacion cambia, se va a disparar.\r\n\r\n            if( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn(true); // esta loggeado\r\n\r\n                dispatch( startLoadingNotes( user.uid ) ); // para que se carguen las notas que estan cargadas en el fireStore\r\n            } else {\r\n                setIsLoggedIn(false); // no esta loggeado. Es para que podamos luego validar si puede ir a determinada ruta o no.\r\n            }\r\n\r\n            setChecking(false); // significa que ya se checkeo al usuario si esta autenticado o no\r\n\r\n        });\r\n        \r\n    }, [dispatch, setChecking, setIsLoggedIn]); // Como \"podria\" cambiar el usedispatch, lo tengo que poner como dependencia sin embargo nunca nos va a cambiar el dispatch por fuera del useEffect. Lo pongo para que no hay un warning\r\n\r\n    if( checking ) {\r\n        return (\r\n            <h1>Please, wait...</h1>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\" \r\n                        component={ AuthRouter }\r\n                        isAuthenticated={ isLoggedIn }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact\r\n                        path=\"/\" \r\n                        component={ JournalScreen }\r\n                        isAuthenticated={ isLoggedIn }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}